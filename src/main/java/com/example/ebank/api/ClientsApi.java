/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.22).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.example.ebank.api;

import com.example.ebank.models.Account;
import com.example.ebank.models.Client;
import com.example.ebank.models.Transaction;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;

@Api(value = "clients", description = "the clients API")
public interface ClientsApi {

        @ApiOperation(value = "Get account's transactions", nickname = "getAccountTransactions", notes = "", response = Transaction.class, responseContainer = "List", tags = {
                        "account", })
        @ApiResponses(value = {
                        @ApiResponse(code = 200, message = "successful operation", response = Transaction.class, responseContainer = "List"),
                        @ApiResponse(code = 400, message = "Invalid client id supplied"),
                        @ApiResponse(code = 404, message = "Client not found") })
        @RequestMapping(value = "/clients/{id}/accounts/{idAccount}/transactions", produces = {
                        "application/json" }, method = RequestMethod.GET)
        ResponseEntity<List<Transaction>> getAccountTransactions(
                        @ApiParam(value = "The id that needs to be fetched. Use \"1\" for testing. ", required = true) @PathVariable("id") String id,
                        @ApiParam(value = "The idAccount that needs to be fetched. Use \"1\" for testing. ", required = true) @PathVariable("idAccount") String idAccount);

        @ApiOperation(value = "Get client's accounts", nickname = "getClientAccounts", notes = "", response = Account.class, responseContainer = "List", tags = {
                        "account", })
        @ApiResponses(value = {
                        @ApiResponse(code = 200, message = "successful operation", response = Account.class, responseContainer = "List"),
                        @ApiResponse(code = 400, message = "Invalid client id supplied"),
                        @ApiResponse(code = 404, message = "Client not found") })
        @RequestMapping(value = "/clients/{id}/accounts", produces = { "application/json" }, method = RequestMethod.GET)
        ResponseEntity<List<Account>> getClientAccounts(
                        @ApiParam(value = "The id that needs to be fetched. Use \"1\" for testing. ", required = true) @PathVariable("id") String id);

        @ApiOperation(value = "Get client by id", nickname = "getClientById", notes = "", response = Client.class, tags = {
                        "client", })
        @ApiResponses(value = { @ApiResponse(code = 200, message = "successful operation", response = Client.class),
                        @ApiResponse(code = 400, message = "Invalid client id supplied"),
                        @ApiResponse(code = 404, message = "Client not found") })
        @RequestMapping(value = "/clients/{id}", produces = { "application/xml",
                        "application/json" }, method = RequestMethod.GET)
        ResponseEntity<Client> getClientById(
                        @ApiParam(value = "The id that needs to be fetched. Use \"1\" for testing. ", required = true) @PathVariable("id") String id);

        @ApiOperation(value = "Get all clients", nickname = "getClients", notes = "", response = Client.class, responseContainer = "List", tags = {
                        "client", })
        @ApiResponses(value = {
                        @ApiResponse(code = 200, message = "successful operation", response = Client.class, responseContainer = "List"),
                        @ApiResponse(code = 400, message = "Invalid client id supplied"),
                        @ApiResponse(code = 404, message = "Client not found") })
        @RequestMapping(value = "/clients", produces = { "application/json" }, method = RequestMethod.GET)
        ResponseEntity<List<Client>> getClients();

        @RequestMapping(value = "/test", produces = { "application/json" }, method = RequestMethod.GET)
        ResponseEntity<String> getTest();

}
