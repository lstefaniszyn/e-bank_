openapi: "3.0.0"
info:
    title: Swagger E-Banking
    description: This is E-banking server.
    termsOfService: "http://swagger.io/terms/"
    contact:
        email: lukasz.stefaniszyn@capgemini.com
    license:
        name: Apache 2.0
        url: "http://www.apache.org/licenses/LICENSE-2.0.html"
    version: "1.0.0"
servers:
    - url: "{protocol}://10.40.234.149:{port}/api/v1"
      variables:
          protocol:
              enum:
                  - "http"
                  - "https"
              default: "http"
          port:
              enum:
                  - "8080"
                  - "8443"
              default: "8080"
tags:
    - name: customer
      description: Operations about customer
    - name: account
      description: Operations about account
paths:
    "/api":
        get:
            tags:
                - app
            summary: Get API status
            operationId: getStatus
            x-contracts:
                - contractId: 1
                  name: AppStatus-OK-Response
                  priority: 1
            responses:
                "200":
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                type: object
                                items:
                                    $ref: "#/components/schemas/AppStatus"
                    x-contracts:
                        - contractId: 1
                          headers:
                              Content-Type: application/json;charset=UTF-8
                          body:
                              app-version: "1.0.0"
                          matchers:
                              body:
                                  - path: $.['app-version']
                                    type: by_regex
                                    value: "[0-9]+\\.[0-9]+\\.[0-9]+"
                "400":
                    description: Error
                    content: {}
                "404":
                    description: Error
                    content: {}
    "/customers":
        get:
            tags:
                - customer
            summary: Get all customers
            operationId: getcustomers
            x-contracts:
                - contractId: 1
                  name: get-customers-OK-Response
                  description: Positive, to get list of customers
                  priority: 1
            responses:
                "200":
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Customer"
                    x-contracts:
                        - contractId: 1
                          headers:
                              Content-Type: application/json;charset=UTF-8
                          items:
                          body:
                              "[0].id": "1"
                          matchers:
                              body:
                                  - path: $[0].['givenName']
                                    type: by_regex
                                    value: "[\\w-_\\.]+"
                                  - path: $[0].['familyName']
                                    type: by_regex
                                    value: "[\\w-_\\.]+"
                "400":
                    description: Invalid customer id supplied
                    content: {}
                "404":
                    description: customer not found
                    content: {}
    "/customers/{idCustomer}":
        get:
            tags:
                - customer
            summary: Get customer by idCustomer
            operationId: getcustomerById
            parameters:
                - name: idCustomer
                  in: path
                  description: 'The id that needs to be fetched. Use "1" for testing. '
                  required: true
                  schema:
                      type: string
            x-contracts:
                - contractId: 1
                  name: get-one-customer-OK-Response
                  description: Positive, to one customer
                  priority: 1
            responses:
                "200":
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Customer"
                    x-contracts:
                        - contractId: 1
                          headers:
                              Content-Type: application/json;charset=UTF-8
                          items:
                          body:
                              "id": "1"
                          matchers:
                              body:
                                  - path: $.['givenName']
                                    type: by_regex
                                    value: "[\\w-_\\.]+"
                                  - path: $.['familyName']
                                    type: by_regex
                                    value: "[\\w-_\\.]+"
                "400":
                    description: Invalid customer id supplied
                    content: {}
                "404":
                    description: customer not found
                    content: {}
    "/customers/{idCustomer}/accounts":
        get:
            tags:
                - account
            summary: Get customer's accounts
            operationId: getcustomerAccounts
            parameters:
                - name: idCustomer
                  in: path
                  description: 'The idCustomer that needs to be fetched. Use "1" for testing. '
                  required: true
                  schema:
                      type: string
            x-contracts:
                - contractId: 1
                  name: get-accounts-for-customer-OK-Response
                  priority: 1
            responses:
                "200":
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Account"
                    x-contracts:
                        - contractId: 1
                          headers:
                              Content-Type: application/json;charset=UTF-8
                          items:
                          body:
                              "[0].id": "1"
                              "[0].name": "1"
                              "[0].currency.name": "Euro"
                              "[0].currency.code": "EUR"
                "400":
                    description: Invalid customer id supplied
                    content: {}
                "404":
                    description: customer not found
                    content: {}
    "/customers/{idCustomer}/accounts/{idAccount}":
        get:
            tags:
                - account
            summary: Get customer's account
            operationId: getcustomerAccount
            parameters:
                - name: idCustomer
                  in: path
                  description: 'The idCustomer that needs to be fetched. Use "1" for testing. '
                  required: true
                  schema:
                      type: string
                - name: idAccount
                  in: path
                  description: 'The idAccount that needs to be fetched. Use "1" for testing. '
                  required: true
                  schema:
                      type: string
            x-contracts:
                - contractId: 1
                  name: get-account-for-one-customer-OK-Response
                  priority: 1
            responses:
                "200":
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                type: object
                                items:
                                    $ref: "#/components/schemas/Account"
                    x-contracts:
                        - contractId: 1
                          headers:
                              Content-Type: application/json;charset=UTF-8
                          items:
                          body:
                              "id": "1"
                              "name": "1"
                              "currency.name": "Euro"
                              "currency.code": "EUR"
                "400":
                    description: Invalid customer id supplied
                    content: {}
                "404":
                    description: customer not found
                    content: {}
    "/customers/{idCustomer}/accounts/{idAccount}/transactions":
        get:
            tags:
                - account
            summary: Get account's transactions
            operationId: getAccountTransactions
            parameters:
                - name: idCustomer
                  in: path
                  description: 'The idCustomer that needs to be fetched. Use "1" for testing. '
                  required: true
                  schema:
                      type: string
                - name: idAccount
                  in: path
                  description: 'The idAccount that needs to be fetched. Use "1" for testing. '
                  required: true
                  schema:
                      type: string
            x-contracts:
                - contractId: 1
                  name: get-transactions-for-account-for-customer-OK-Response
                  priority: 1
            responses:
                "200":
                    description: successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Transaction"
                    x-contracts:
                        - contractId: 1
                          headers:
                              Content-Type: application/json;charset=UTF-8
                          items:
                          body:
                              "[0].id": "1"
                              "[0].value.amount": "1"
                              "[0].value.currency.name": "Euro"
                              "[0].value.currency.code": "EUR"
                              "[0].iban": "TR320010009999901234567890"
                              "[0].date": "2017-07-21T17:32:28Z"
                              "[0].description": "Test"
                          matchers:
                              body:
                                  - path: $[0].['iban']
                                    type: by_regex
                                    value: "\\w\\w[\\d]{16,24}"
                                  - path: $[0].['date']
                                    type: by_regex
                                    value: "\\d{4}-\\d{2}-\\d{2}(T|t)\\d{2}:\\d{2}:\\d{2}[\\w]?"
                                  - path: $[0].['description']
                                    type: by_regex
                                    value: "[\\w]*"
                "400":
                    description: Invalid customer id supplied
                    content: {}
                "404":
                    description: customer not found
                    content: {}
components:
    schemas:
        Currency:
            type: object
            properties:
                name:
                    type: string
                    description: like, Euro
                code:
                    type: string
                    description: like, EUR
            xml:
                name: Currency
        Account:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                name:
                    type: string
                currency:
                    $ref: "#/components/schemas/Currency"
        Customer:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                givenName:
                    type: string
                    description: https://schema.org/givenName
                familyName:
                    type: string
                    description: https://schema.org/familyName
                accounts:
                    type: array
                    items:
                        $ref: "#/components/schemas/Account"
        AppStatus:
            type: object
            properties:
                app-version:
                    type: string
                    description: https://schema.org/version
        Transaction:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                value:
                    type: object
                    properties:
                        amount:
                            type: integer
                            format: int64
                        currency:
                            $ref: "#/components/schemas/Currency"
                iban:
                    type: string
                date:
                    type: string
                    format: date-time
                description:
                    type: string
            xml:
                name: Transaction
        ApiResponse:
            type: object
            properties:
                code:
                    type: integer
                    format: int32
                type:
                    type: string
                message:
                    type: string
